{"version":3,"sources":["components/TodoList.jsx","App.jsx","index.jsx"],"names":["TodoList","state","input","todos","handleSubmit","e","preventDefault","editedTodos","trim","push","content","setState","onChange","target","value","handleDelete","indexToDelete","splice","editedTodosWithFilter","filter","item","index","onSubmit","this","type","map","key","className","onClick","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"+PA6FeA,E,2MA1FbC,MAAQ,CACNC,MAAO,GACPC,MAAO,I,EAGTC,aAAe,SAAAC,GACbA,EAAEC,iBAGF,IAAMC,EAAW,YAAO,EAAKN,MAAME,OAGJ,KAA5B,EAAKF,MAAMC,MAAMM,SAGlBD,EAAYE,KAAK,CAAEC,QAAS,EAAKT,MAAMC,QAGvC,EAAKS,SAAS,CACZR,MAAOI,EACPL,MAAM,O,EAOZU,SAAW,SAAAP,GACT,EAAKM,SAAS,CACZT,MAAOG,EAAEQ,OAAOC,S,EAIpBC,aAAe,SAACC,GAId,IAAMT,EAAW,YAAO,EAAKN,MAAME,OAGnCI,EAAYU,OAAOD,EAAe,GAGlC,EAAKL,SAAS,CACZR,MAAOI,IAKT,IAAMW,EAAwB,EAAKjB,MAAME,MAAMgB,QAAQ,SAACC,EAAMC,GAC5D,OAAOL,IAAkBK,KAG3B,EAAKV,SAAS,CACZR,MAAOe,K,wEAKD,IAAD,OACP,OACE,oCACE,0BAAMI,SAAUC,KAAKnB,cACnB,2BACEoB,KAAK,OACLV,MAAOS,KAAKtB,MAAMC,MAClBU,SAAUW,KAAKX,WAEjB,8CAEF,4BACGW,KAAKtB,MAAME,MAAMsB,KAAI,SAACL,EAAMC,GAAP,OACpB,wBAAIK,IAAKL,GAAQD,EAAKV,QACpB,0BAAMiB,UAAU,oBACd,4BACEH,KAAK,SACLG,UAAU,eACVC,QAAS,WACP,EAAKb,aAAaM,KAJtB,qB,GA3EOQ,aCaRC,E,iLATX,OACE,8BACE,yCACA,kBAAC,EAAD,W,GANUC,IAAMF,WCExBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.1a184823.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TodoList extends Component {\n  state = {\n    input: \"\",\n    todos: []\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // copy todo list\n    const editedTodos = [...this.state.todos];\n\n    //check if the input is an empty string or just spaces\n    if(this.state.input.trim() !== '') {\n\n      // add a new todo to the list\n      editedTodos.push({ content: this.state.input });\n\n      // save the updated list and reset `input`\n      this.setState({\n        todos: editedTodos,\n        input:''\n      });\n    }\n\n\n  };\n\n  onChange = e => {\n    this.setState({\n      input: e.target.value\n    });\n  };\n\n  handleDelete = (indexToDelete) => {\n    \n    //Method 1\n    // copy todo list\n    const editedTodos = [...this.state.todos];\n\n    //remove the todo at 'index'\n    editedTodos.splice(indexToDelete, 1);\n\n    //save the updated todo list to state\n    this.setState({\n      todos: editedTodos\n    })\n\n    //Method 2\n    // make a copy of the todo list, but without the clicked item\n    const editedTodosWithFilter = this.state.todos.filter( (item, index) =>  {\n      return indexToDelete !== index;\n    });\n\n    this.setState({\n      todos: editedTodosWithFilter\n    })\n\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            value={this.state.input}\n            onChange={this.onChange}\n          ></input>\n          <button>save todo</button>\n        </form>\n        <ul>\n          {this.state.todos.map((item, index) => (\n            <li key={index}>{item.content}\n              <span className=\"delete-container\">\n                <button\n                  type=\"button\"\n                  className=\"deleteButton\"\n                  onClick={() => {\n                    this.handleDelete(index)\n                  }}>Delete</button>\n              </span>\n            </li>\n          ))}\n        </ul>\n\n      </>\n    );\n  }\n}\n\nexport default TodoList;","import React from \"react\";\nimport TodoList from \"./components/TodoList\";\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <main>\n        <h1>Todo List</h1>\n        <TodoList />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}